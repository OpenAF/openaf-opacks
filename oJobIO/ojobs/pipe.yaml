# Author: Nuno Aguiar
help:
  text   : |
    Pipe oJobs in a sequence. Expects number arguments with the order of the jobs and [number].[argument] for each job specific argument. Example:
    
      0=myJob1 1=myJob2 2=myJob3 1.a=2 1.b=2 2.XX=abc __format=tree

todo:
- Pipe

ojob:
  sequential  : true
  opacks      :
  - openaf: 20211229
  catch       : logErr(exception);
  logToConsole: false   # to change when finished

jobs:
# ---------------
- name: Get parts
  exec: |
    var oo = Object.keys(args);
    global.pipe = [];

    $from(oo)
    .notEquals("init")
    .notEquals("__id")
    .notEquals("objId")
    .notEquals("execid")
    .sort()
    .select(r => {
      if (isNumber(r)) {
        if ($from(global.pipe).equals("n", r).none()) {
          global.pipe.push({ j: args[r], n: r, a: {} });
        } else {
          $from(global.pipe).equals("n", r).at(0).j = args[r];
        }
      } else {
        var s = r.match(/^(\d+)\.(.+)/);
        if (isArray(s) && s.length > 2) {
          if ( $from(global.pipe).equals("n", s[1]).none() ) {
            var aa = {}; aa[s[2]] = args[r]; 
            global.pipe.push({ j: args[s[1]], n: s[1], a: aa });
          } else {
            $from(global.pipe)
            .equals("n", s[1])
            .at(0)
            .a[ s[2] ] = args[ r ];
          }
        }
      }
    })

# ----------
- name: Pipe
  from:
  - Get parts
  exec: |
    if (isDef(args.generate)) {
      var res = { todo: [], ojob: { logToConsole: false }, jobs: [] }, c = 0;
      if (isDef(__flags.OJOB_SHAREARGS)) {
        res.ojob.shareArgs = false
      }
      $from(global.pipe).sort("n").select(r => {
        if (Object.keys(r.a).indexOf("*") >= 0)     r.a = r.a["*"];
        if (Object.keys(r.a).indexOf("*path") >= 0) r.a = "$path(__pm._list, \"" + r.a["*path"] + "\")";
        if (!isString(r.a)) r.a = merge({Â __format: "pm" }, r.a);

        res.todo.push("Job " + c);
        res.jobs.push({
          name: "Job " + c,
          type: "jobs",
          typeArgs: (io.fileExists(r.j) ? { file: r.j } : { url: r.j }),
          args: r.a 
        });
        c++;
      });
      print(af.toYAML(res));
    } else {

      var _rpt = isDef(args.__interval)

      do {
        $from(global.pipe).sort("n").select(r => {
          var exec = false
          if (isUnDef(r.a)) r.a = {}

          if (Object.keys(r.a).indexOf("*path") >= 0)      { r.a = $path(__pm._list, r.a["*path"]); exec = true; } 
          if (!exec && Object.keys(r.a).indexOf("*") >= 0) { r.a = af.eval(r.a["*"]); exec = true; }
          if (isUnDef(r.a.__format)) r.a.__format = "pm"

          ow.oJob.runFile(r.j, r.a, now(), true, (isDef(__flags.OJOB_SHAREARGS) ? { shareArgs: false } : __))
          if (isUnDef(__flags.OJOB_SHAREARGS)) $set("res", {})
        })

        if (_rpt) {
          sleep(args.__interval, true)
          __pm = {}
        }
      } while (_rpt)
    } 


