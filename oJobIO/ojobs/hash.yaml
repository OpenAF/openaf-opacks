# Author: Nuno Aguiar
init:
  help: &HELP
    text   : Generates a hash integrity file
    expects: 
    - name   : url
      desc   : A oJobIO URL server for which to generate a hash integrity file
      example: https://ojob.io
    - name   : file
      desc   : Saving the result into a JSON file
      example: integrity.json

todo:
- Generate hash

ojob:
  opacks      :
  - openaf: 20210515
  catch       : "ow.oJob.output({ Help: args.init.help }, args); logErr(exception);"
  logToConsole: true   # to change when finished
        

jobs:
# ----------
- name: Help
  help: *HELP


# -------------------
- name: Generate hash
  exec: |
    _$(args.url, "url").$_();

    var urls = $rest().get(args.url).init.l;
    var hashes = {};
    urls.forEach(url => {
      url = url.replace(/\.yaml$/, "");
      log("Checking " + url + "...");
      hashes[url] = "sha256-" + sha256($rest().get2Stream(url));
    });

    if (isDef(args.file)) io.writeFileJSON(args.file, hashes);

    ow.oJob.output(hashes, args);
