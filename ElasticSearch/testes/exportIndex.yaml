ojob:
  logToConsole: false

jobs:
  - name: Init
    exec: |
      load("elasticsearch.js");
      _$(args.url).isString("The url needs to be a string.").$_("Please provide url=http://...");
      global.__batchSize = _$(args.batchSize).isNumber("BatchSize needs to be a number.").default(100);
      global.__threads   = _$(args.threads).isNumber("Threads needs to be a number.").default(getNumberOfCores());
      global.__index     = _$(args.index).isString("Index needs to be a string.").$_("Please provide an index pattern index=something*");
      global.__output    = _$(args.output).isString("Output needs to be a string.").default("output.json");

      log("  batchsize = " + global.__batchSize);
      log("  threads   = " + global.__threads);
      log("  index     = " + global.__index);
      log("  output    = " + global.__output);
      log("Connecting to " + args.url + "...");
      global.__es = new ElasticSearch(args.url);
      global.__iniBulk = [];

  - name: Exporting index
    deps:
      - Init
    exec: |
      log("Exporting to file '" + global.__output + "'");

      for(var ii = 0; ii < global.__threads; ii++) {
        var res = global.__es.createScroll(global.__index, void 0, global.__batchSize, void 0, ii, global.__threads);
        res.__index = ii + 1;
        global.__iniBulk.push(res);
        log("Exporting " + global.__iniBulk[ii].hits.total + " records on thread " + res.__index + "...");
      }

      var wstream = io.writeFileStream(global.__output);
      parallel4Array(global.__iniBulk, function(ini) {
        try {
          var res = ini; var c = 0;
          while(res.hits.hits.length > 0) {
            res.hits.hits.forEach((v) => {
              var m = stringify(v._source, void 0, "") + "\n";
              ioStreamWrite(wstream, m, m.length, false);
              c++;
            });
            res = global.__es.nextScroll(res);
          }
          log("Done export of " + c + " records on thread " + ini.__index + ".");
        } catch(e) {
          logErr(stringify(e));
        }
        return true;
      });
      wstream.close();

      try {
        for(var is in global.__iniBulk) {
            global.__es.deleteScroll(global.__iniBulk[is]);
        }
      } catch(e) {
      }

todo:
  - Init
  - Exporting index