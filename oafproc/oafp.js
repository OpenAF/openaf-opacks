showHelp=()=>{__initializeCon();var a=(getOPackPath("oafproc")||".")+"/README.md";io.fileExists(a)?(__conConsole=__ansiColorFlag=!0,isDef(ow.format.string.pauseString)?ow.format.string.pauseString(ow.format.withMD(io.readFileString(a))):print(ow.format.withMD(io.readFileString(a)))):print("Check https://github.com/OpenAF/openaf-opacks/blob/master/oafproc/README.md");exit(0)};ow.loadFormat();-1<__expr.indexOf(" -h")&&showHelp();
var _file=params.file,_format=params.output||params.format,_type=params.input||params.type,_from=params.from,_sql=params.sql,_path=params.path,_csv=params.csv,_pause=params.pause,_xmlignored=params.xmlignored,_xmlprefix=params.xmlprefix,_xmlfiltertag=params.xmlfiltertag,_ndjsonjoin=params.ndjsonjoin;_format=_$(_format,"format").isString().default("ctree");__initializeCon();var options={__format:_format,__from:_from,__sql:_sql,__path:_path,__csv:_csv,__pause:_pause};
"ndjson"==_type&&(_ndjsonjoin=toBoolean(_$(_ndjsonjoin,"ndjsonjoin").isString().default(__)));var _res="",noFurtherOutput=!1;isDef(_file)?"csv"!=_type&&(_res=io.readFileString(_file)):(_res=[],io.pipeLn(a=>{"ndjson"!=_type||_ndjsonjoin?_res.push(a):($o(jsonParse(a,__,__,!0),options),noFurtherOutput=!0);return!1}),_res=_res.join("\n"));
if(!noFurtherOutput){if(isUnDef(_type)){if(isDef(_file))switch(_file.substring(_file.lastIndexOf("."))){case ".json":_type="json";break;case ".yaml":_type="yaml";break;case ".xml":_type="xml";break;case ".csv":_type="csv"}isUnDef(_type)&&(_res.trim().startsWith("{")||_res.trim().startsWith("[")?_type="json":_res.trim().startsWith("<")?_type="xml":isString(_res)&&0<_res.length?1<_res.substring(0,_res.indexOf("\n")).split(",").length?_type="csv":_res.substring(0,0<_res.indexOf(": "))&&(_type="yaml"):
(printErr("Please provide the input type."),exit(-1)))}switch(_type){case "yaml":$o(af.fromYAML(_res),options);break;case "xml":_xmlignored=_$(_xmlignored,"xmlignored").isString().default(__);_xmlprefix=_$(_xmlprefix,"xmlprefix").isString().default(__);_xmlfiltertag=toBoolean(_$(_xmlfiltertag,"xmlfiltertag").isString().default(__));$o(af.fromXML2Obj(_res,_xmlignored,_xmlprefix,_xmlfiltertag),options);break;case "ndjson":_ndjsonjoin?$o(_res.split("\n").map(a=>jsonParse(a.trim(),__,__,!0)),options):
io.readLinesNDJSON(af.fromString2InputStream(_res),a=>{$o(a,options)});break;case "md":__conConsole=__ansiColorFlag=!0;print(ow.format.withMD(_res));break;case "csv":if(isDef(_file)){var is=io.readFileStream(_file);$o($csv().fromInStream(is).toOutArray(),options);is.close()}else $o($csv().fromInString(_res).toOutArray(),options);break;default:$o(jsonParse(_res,__,__,!0),options)}};
