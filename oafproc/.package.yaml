author: Nuno Aguiar
scripts:
  preerase: ''
  posterase: |
    if (io.fileExists(getOpenAFPath() + "oafp")) {
      logWarn("Removing " + getOpenAFPath() + "oafp...")
      io.rm(getOpenAFPath() + "oafp")
    }
  preinstall: ''
  postinstall: |
    if (outputPath.startsWith(getOpenAFPath())) {
      log("Installing 'oafp' in " + getOpenAFPath() + "...")
      io.cp(outputPath + "/oafp.js", getOpenAFPath() + "oafp.js")
      $sh(getOpenAFPath() + "oaf --sb " + getOpenAFPath() + "oafp.js").exec()
      log("Renaming oafp.js to oafp...")
      io.mv(getOpenAFPath() + "oafp.js", getOpenAFPath() + "oafp")
      print("\n --> Run '" + io.fileInfo(getOpenAFPath() + "oafp").canonicalPath + " -h' for usage details <--\n")
    } else {
      log("Creating 'oafp'...")
      io.cp(outputPath + "/oafp.js", "oafp.js")
      $sh(getOpenAFPath() + "oaf --sb oafp.js").exec()
      log("Renaming oafp.js to oafp...")
      io.mv("oafp.js", "oafp")
      print("\n --> Run '" + io.fileInfo("oafp").canonicalPath + " -h' for usage details <--\n")
    }
keywords:
- data
- processor
- yaml
- json
- xml
- csv
- ndjson
- slon
- md
- visualisation
- oafp
bugs:
  url: https://github.com/OpenAF/openaf-opacks/issues
repository:
  type: http
  url: https://openaf.io/opacks/oafp.opack
description: A command-line data processor for various input and output formats with query capabilities.
name: oafproc
main: oafp.js
mainJob: ''
license: https://github.com/OpenAF/openaf-opacks/blob/master/LICENSE
version: '20240127'
dependencies:
  openaf: '>=20231222'
files:
- .package.yaml
- README.md
- build/build.yaml
- build/oafp.source.js
- oafp.js
filesHash:
  README.md: 4e3221fc80f0bd43cd6d8b53d40719be77bcecd4
  build/build.yaml: 6336b246b812bbb468116b229d39749b7c2d437a
  build/oafp.source.js: cd991014dfe9c6cfeb6a588dde3bf99e5f9c5670
  oafp.js: 93695a846ce8e148025f19931a6bfdb17082ab22
